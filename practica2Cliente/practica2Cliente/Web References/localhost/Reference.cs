//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18408
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18408.
// 
#pragma warning disable 1591

namespace practica2Cliente.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="p2SOAP", Namespace="http://www.example.org/p2/")]
    public partial class p2SOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SolicitarPresupuestoOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrdenarCompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public p2SOAP() {
            this.Url = global::practica2Cliente.Properties.Settings.Default.practica2Cliente_localhost_p2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SolicitarPresupuestoCompletedEventHandler SolicitarPresupuestoCompleted;
        
        /// <remarks/>
        public event OrdenarCompraCompletedEventHandler OrdenarCompraCompleted;
        
        /// <remarks/>
        public event ActualizarStockCompletedEventHandler ActualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p2/SolicitarPresupuesto", RequestNamespace="http://www.example.org/p2/", ResponseNamespace="http://www.example.org/p2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float SolicitarPresupuesto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("SolicitarPresupuesto", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void SolicitarPresupuestoAsync(int numeroUnidades, string referenciaProducto) {
            this.SolicitarPresupuestoAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void SolicitarPresupuestoAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.SolicitarPresupuestoOperationCompleted == null)) {
                this.SolicitarPresupuestoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSolicitarPresupuestoOperationCompleted);
            }
            this.InvokeAsync("SolicitarPresupuesto", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.SolicitarPresupuestoOperationCompleted, userState);
        }
        
        private void OnSolicitarPresupuestoOperationCompleted(object arg) {
            if ((this.SolicitarPresupuestoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SolicitarPresupuestoCompleted(this, new SolicitarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p2/OrdenarCompra", RequestNamespace="http://www.example.org/p2/", ResponseNamespace="http://www.example.org/p2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OrdenarCompra([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("OrdenarCompra", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OrdenarCompraAsync(int numeroUnidades, string referenciaProducto) {
            this.OrdenarCompraAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void OrdenarCompraAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.OrdenarCompraOperationCompleted == null)) {
                this.OrdenarCompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrdenarCompraOperationCompleted);
            }
            this.InvokeAsync("OrdenarCompra", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.OrdenarCompraOperationCompleted, userState);
        }
        
        private void OnOrdenarCompraOperationCompleted(object arg) {
            if ((this.OrdenarCompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrdenarCompraCompleted(this, new OrdenarCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p2/ActualizarStock", RequestNamespace="http://www.example.org/p2/", ResponseNamespace="http://www.example.org/p2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ActualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("ActualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ActualizarStockAsync(int numeroUnidades, string referenciaProducto) {
            this.ActualizarStockAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void ActualizarStockAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.ActualizarStockOperationCompleted == null)) {
                this.ActualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActualizarStockOperationCompleted);
            }
            this.InvokeAsync("ActualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.ActualizarStockOperationCompleted, userState);
        }
        
        private void OnActualizarStockOperationCompleted(object arg) {
            if ((this.ActualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActualizarStockCompleted(this, new ActualizarStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicioAlmacenSOAP", Namespace="http://www.example.org/ServicioAlmacen/")]
    public partial class ServicioAlmacenSOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback comprobarStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServicioAlmacenSOAP() {
            this.Url = global::practica2Cliente.Properties.Settings.Default.practica2Cliente_localhost_ServicioAlmacen;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event comprobarStockCompletedEventHandler comprobarStockCompleted;
        
        /// <remarks/>
        public event actualizarStockCompletedEventHandler actualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/ServicioAlmacen/comprobarStock", RequestNamespace="http://www.example.org/ServicioAlmacen/", ResponseNamespace="http://www.example.org/ServicioAlmacen/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool comprobarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("comprobarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void comprobarStockAsync(int numeroUnidades, string referenciaProducto) {
            this.comprobarStockAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void comprobarStockAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.comprobarStockOperationCompleted == null)) {
                this.comprobarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OncomprobarStockOperationCompleted);
            }
            this.InvokeAsync("comprobarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.comprobarStockOperationCompleted, userState);
        }
        
        private void OncomprobarStockOperationCompleted(object arg) {
            if ((this.comprobarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.comprobarStockCompleted(this, new comprobarStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/ServicioAlmacen/actualizarStock", RequestNamespace="http://www.example.org/ServicioAlmacen/", ResponseNamespace="http://www.example.org/ServicioAlmacen/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool actualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("actualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarStockAsync(int numeroUnidades, string referenciaProducto) {
            this.actualizarStockAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void actualizarStockAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.actualizarStockOperationCompleted == null)) {
                this.actualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarStockOperationCompleted);
            }
            this.InvokeAsync("actualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.actualizarStockOperationCompleted, userState);
        }
        
        private void OnactualizarStockOperationCompleted(object arg) {
            if ((this.actualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarStockCompleted(this, new actualizarStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="practica2BBinding", Namespace="http://practica2B.mtis")]
    public partial class practica2BBinding : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback processOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public practica2BBinding() {
            this.Url = global::practica2Cliente.Properties.Settings.Default.practica2Cliente_localhost_practica2BService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event processCompletedEventHandler processCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://practica2B.mtis/process", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("practica2BResponse", Namespace="http://practica2B.mtis")]
        public practica2BResponse process([System.Xml.Serialization.XmlElementAttribute(Namespace="http://practica2B.mtis")] practica2BRequest practica2BRequest) {
            object[] results = this.Invoke("process", new object[] {
                        practica2BRequest});
            return ((practica2BResponse)(results[0]));
        }
        
        /// <remarks/>
        public void processAsync(practica2BRequest practica2BRequest) {
            this.processAsync(practica2BRequest, null);
        }
        
        /// <remarks/>
        public void processAsync(practica2BRequest practica2BRequest, object userState) {
            if ((this.processOperationCompleted == null)) {
                this.processOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessOperationCompleted);
            }
            this.InvokeAsync("process", new object[] {
                        practica2BRequest}, this.processOperationCompleted, userState);
        }
        
        private void OnprocessOperationCompleted(object arg) {
            if ((this.processCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processCompleted(this, new processCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="p1SOAP", Namespace="http://www.example.org/p1/")]
    public partial class p1SOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SolicitarPresupuestoOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrdenarCompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public p1SOAP() {
            this.Url = global::practica2Cliente.Properties.Settings.Default.practica2Cliente_localhost_p1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SolicitarPresupuestoCompletedEventHandler SolicitarPresupuestoCompleted;
        
        /// <remarks/>
        public event OrdenarCompraCompletedEventHandler OrdenarCompraCompleted;
        
        /// <remarks/>
        public event ActualizarStockCompletedEventHandler ActualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p1/SolicitarPresupuesto", RequestNamespace="http://www.example.org/p1/", ResponseNamespace="http://www.example.org/p1/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float SolicitarPresupuesto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("SolicitarPresupuesto", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void SolicitarPresupuestoAsync(int numeroUnidades, string referenciaProducto) {
            this.SolicitarPresupuestoAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void SolicitarPresupuestoAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.SolicitarPresupuestoOperationCompleted == null)) {
                this.SolicitarPresupuestoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSolicitarPresupuestoOperationCompleted);
            }
            this.InvokeAsync("SolicitarPresupuesto", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.SolicitarPresupuestoOperationCompleted, userState);
        }
        
        private void OnSolicitarPresupuestoOperationCompleted(object arg) {
            if ((this.SolicitarPresupuestoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SolicitarPresupuestoCompleted(this, new SolicitarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p1/OrdenarCompra", RequestNamespace="http://www.example.org/p1/", ResponseNamespace="http://www.example.org/p1/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OrdenarCompra([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("OrdenarCompra", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OrdenarCompraAsync(int numeroUnidades, string referenciaProducto) {
            this.OrdenarCompraAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void OrdenarCompraAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.OrdenarCompraOperationCompleted == null)) {
                this.OrdenarCompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrdenarCompraOperationCompleted);
            }
            this.InvokeAsync("OrdenarCompra", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.OrdenarCompraOperationCompleted, userState);
        }
        
        private void OnOrdenarCompraOperationCompleted(object arg) {
            if ((this.OrdenarCompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrdenarCompraCompleted(this, new OrdenarCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p1/ActualizarStock", RequestNamespace="http://www.example.org/p1/", ResponseNamespace="http://www.example.org/p1/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ActualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("ActualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ActualizarStockAsync(int numeroUnidades, string referenciaProducto) {
            this.ActualizarStockAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void ActualizarStockAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.ActualizarStockOperationCompleted == null)) {
                this.ActualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActualizarStockOperationCompleted);
            }
            this.InvokeAsync("ActualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.ActualizarStockOperationCompleted, userState);
        }
        
        private void OnActualizarStockOperationCompleted(object arg) {
            if ((this.ActualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActualizarStockCompleted(this, new ActualizarStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="p3SOAP", Namespace="http://www.example.org/p3/")]
    public partial class p3SOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SolicitarPresupuestoOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrdenarCompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public p3SOAP() {
            this.Url = global::practica2Cliente.Properties.Settings.Default.practica2Cliente_localhost_p3;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SolicitarPresupuestoCompletedEventHandler SolicitarPresupuestoCompleted;
        
        /// <remarks/>
        public event OrdenarCompraCompletedEventHandler OrdenarCompraCompleted;
        
        /// <remarks/>
        public event ActualizarStockCompletedEventHandler ActualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p3/SolicitarPresupuesto", RequestNamespace="http://www.example.org/p3/", ResponseNamespace="http://www.example.org/p3/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float SolicitarPresupuesto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("SolicitarPresupuesto", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void SolicitarPresupuestoAsync(int numeroUnidades, string referenciaProducto) {
            this.SolicitarPresupuestoAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void SolicitarPresupuestoAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.SolicitarPresupuestoOperationCompleted == null)) {
                this.SolicitarPresupuestoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSolicitarPresupuestoOperationCompleted);
            }
            this.InvokeAsync("SolicitarPresupuesto", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.SolicitarPresupuestoOperationCompleted, userState);
        }
        
        private void OnSolicitarPresupuestoOperationCompleted(object arg) {
            if ((this.SolicitarPresupuestoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SolicitarPresupuestoCompleted(this, new SolicitarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p3/OrdenarCompra", RequestNamespace="http://www.example.org/p3/", ResponseNamespace="http://www.example.org/p3/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool OrdenarCompra([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("OrdenarCompra", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void OrdenarCompraAsync(int numeroUnidades, string referenciaProducto) {
            this.OrdenarCompraAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void OrdenarCompraAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.OrdenarCompraOperationCompleted == null)) {
                this.OrdenarCompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrdenarCompraOperationCompleted);
            }
            this.InvokeAsync("OrdenarCompra", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.OrdenarCompraOperationCompleted, userState);
        }
        
        private void OnOrdenarCompraOperationCompleted(object arg) {
            if ((this.OrdenarCompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrdenarCompraCompleted(this, new OrdenarCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/p3/ActualizarStock", RequestNamespace="http://www.example.org/p3/", ResponseNamespace="http://www.example.org/p3/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ActualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto) {
            object[] results = this.Invoke("ActualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ActualizarStockAsync(int numeroUnidades, string referenciaProducto) {
            this.ActualizarStockAsync(numeroUnidades, referenciaProducto, null);
        }
        
        /// <remarks/>
        public void ActualizarStockAsync(int numeroUnidades, string referenciaProducto, object userState) {
            if ((this.ActualizarStockOperationCompleted == null)) {
                this.ActualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActualizarStockOperationCompleted);
            }
            this.InvokeAsync("ActualizarStock", new object[] {
                        numeroUnidades,
                        referenciaProducto}, this.ActualizarStockOperationCompleted, userState);
        }
        
        private void OnActualizarStockOperationCompleted(object arg) {
            if ((this.ActualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActualizarStockCompleted(this, new ActualizarStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://practica2B.mtis")]
    public partial class practica2BRequest {
        
        private int numeroUnidadesField;
        
        private string referenciaProductoField;
        
        /// <comentarios/>
        public int numeroUnidades {
            get {
                return this.numeroUnidadesField;
            }
            set {
                this.numeroUnidadesField = value;
            }
        }
        
        /// <comentarios/>
        public string referenciaProducto {
            get {
                return this.referenciaProductoField;
            }
            set {
                this.referenciaProductoField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://practica2B.mtis")]
    public partial class practica2BResponse {
        
        private bool resultField;
        
        /// <comentarios/>
        public bool result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SolicitarPresupuestoCompletedEventHandler(object sender, SolicitarPresupuestoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SolicitarPresupuestoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SolicitarPresupuestoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void OrdenarCompraCompletedEventHandler(object sender, OrdenarCompraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrdenarCompraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrdenarCompraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ActualizarStockCompletedEventHandler(object sender, ActualizarStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActualizarStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActualizarStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void comprobarStockCompletedEventHandler(object sender, comprobarStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class comprobarStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal comprobarStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void actualizarStockCompletedEventHandler(object sender, actualizarStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class actualizarStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal actualizarStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void processCompletedEventHandler(object sender, processCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public practica2BResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((practica2BResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591